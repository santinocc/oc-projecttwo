spring.application.name=projecttwo

logging.level.org.springframework=INFO
logging.level.com.oc=INFO
logging.level.com.zaxxer=INFO
logging.level.root=ERROR
logging.pattern.console=%-5level %logger{36} - %msg%n

## Testing only
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.hikari.maxLifetime=60000

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/medidb
spring.datasource.username=mediscreen
spring.datasource.password=password

## MongoDB   // TEST IF THIS IS CORRECT
spring.data.mongodb.uri=mongodb://localhost:27017
spring.data.mongodb.username=mediscreenmongo
spring.data.mongodb.password=passwordmongo
spring.data.mongodb.database=mypatienthistorylist

## MongoDb Container
#spring.data.mongodb.database=OAuth2Sample
spring.data.mongodb.port=${mongodb.container.port}
spring.data.mongodb.host=localhost
spring.data.mongodb.auto-index-creation=true

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=create-drop

# app custom property, if true, insert data for testing
app.db.init.enabled=true

# enable query logging
# spring.jpa.show-sql=true

# DOCKER COMMAND TO RUN:
# docker run --name oc2 -p 5432:5432 -e POSTGRES_USER=mediscreen -e POSTGRES_PASSWORD=password -e POSTGRES_DB=medidb -d postgres:15-alpine
